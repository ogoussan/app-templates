{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-15-3-4/set-mode-in-configuration.ts"],"sourcesContent":["import {\n  formatFiles,\n  readProjectConfiguration,\n  Tree,\n  updateProjectConfiguration,\n} from '@nx/devkit';\nimport { forEachExecutorOptions } from '@nx/devkit/src/generators/executor-options-utils';\n\nexport async function setModeInConfiguration(tree: Tree) {\n  forAllProjectsUsingViteAddMode(tree);\n  await formatFiles(tree);\n}\n\nexport default setModeInConfiguration;\n\nfunction forAllProjectsUsingViteAddMode(tree: Tree): void {\n  forEachExecutorOptions(\n    tree,\n    '@nrwl/vite:build',\n    (_options, projectName, targetName, configuration) => {\n      if (!configuration) {\n        return;\n      }\n\n      const projectConfiguration = readProjectConfiguration(tree, projectName);\n      projectConfiguration.targets[targetName].configurations[\n        configuration\n      ].mode ??= configuration;\n\n      updateProjectConfiguration(tree, projectName, {\n        ...projectConfiguration,\n      });\n    }\n  );\n}\n"],"names":["setModeInConfiguration","tree","forAllProjectsUsingViteAddMode","formatFiles","forEachExecutorOptions","_options","projectName","targetName","configuration","projectConfiguration","readProjectConfiguration","targets","configurations","mode","updateProjectConfiguration"],"mappings":";;;;;;;;IAQsBA,sBAAsB;eAAtBA;;IAKtB,OAAsC;eAAtC;;;;wBARO;sCACgC;AAEhC,eAAeA,uBAAuBC,IAAU;IACrDC,+BAA+BD;IAC/B,MAAME,IAAAA,mBAAW,EAACF;AACpB;MAEA,WAAeD;AAEf,SAASE,+BAA+BD,IAAU;IAChDG,IAAAA,4CAAsB,EACpBH,MACA,oBACA,CAACI,UAAUC,aAAaC,YAAYC;YAMlCC;QALA,IAAI,CAACD,eAAe;YAClB;QACF;QAEA,MAAMC,uBAAuBC,IAAAA,gCAAwB,EAACT,MAAMK;;QAC5DG,UAAAA,wEAAAA,qBAAqBE,OAAO,CAACJ,WAAW,CAACK,cAAc,CACrDJ,cACD,EAACK,wBAFFJ,sEAEEI,OAASL;QAEXM,IAAAA,kCAA0B,EAACb,MAAMK,aAAa,eACzCG;IAEP;AAEJ"}