"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const semver_1 = require("@nx/devkit/src/utils/semver");
const semver_2 = require("semver");
const object_sort_1 = require("nx/src/utils/object-sort");
const nestJsSchematicsVersion = '^9.0.0';
const nestJsVersion8 = '^8.0.0';
const rxjsVersion7 = '^7.0.0';
async function update(tree) {
    const shouldUpdate = await isUpdatable(tree);
    if (!shouldUpdate) {
        return;
    }
    updateVersion(tree);
    await (0, devkit_1.formatFiles)(tree);
    return () => {
        devkit_1.logger.info('Please make sure to run npm install or yarn install to get the latest packages added by this migration');
    };
}
exports.default = update;
async function isUpdatable(tree) {
    const json = (0, devkit_1.readJson)(tree, 'package.json');
    if (json.dependencies['@angular/core']) {
        const rxjs = (0, semver_1.checkAndCleanWithSemver)('rxjs', json.dependencies['rxjs']);
        if ((0, semver_2.satisfies)(rxjs, rxjsVersion7)) {
            return true;
        }
        const { Confirm } = require('enquirer');
        const prompt = new Confirm({
            name: 'question',
            message: 'Do you want to update to RxJS 7 + Nest 8?',
            initial: true,
        });
        return await prompt.run();
    }
    return true;
}
function updateVersion(tree) {
    (0, devkit_1.updateJson)(tree, 'package.json', (json) => {
        json.dependencies = json.dependencies || {};
        json.devDependencies = json.devDependencies || {};
        const rxjs = (0, semver_1.checkAndCleanWithSemver)('rxjs', json.dependencies['rxjs']);
        json.dependencies = {
            ...json.dependencies,
            '@nestjs/common': nestJsVersion8,
            '@nestjs/core': nestJsVersion8,
            rxjs: (0, semver_2.satisfies)(rxjs, rxjsVersion7)
                ? json.dependencies['rxjs']
                : rxjsVersion7,
        };
        if (json.dependencies['@nestjs/platform-express']) {
            json.dependencies['@nestjs/platform-express'] = nestJsVersion8;
        }
        if (json.dependencies['@nestjs/platform-fastify']) {
            json.dependencies['@nestjs/platform-fastify'] = nestJsVersion8;
        }
        json.devDependencies = {
            ...json.devDependencies,
            '@nestjs/schematics': nestJsSchematicsVersion,
            '@nestjs/testing': nestJsVersion8,
        };
        if (json.devDependencies['jasmine-marbles']) {
            json.devDependencies['jasmine-marbles'] = '~0.9.1';
        }
        json.dependencies = (0, object_sort_1.sortObjectByKeys)(json.dependencies);
        json.devDependencies = (0, object_sort_1.sortObjectByKeys)(json.devDependencies);
        return json;
    });
}
